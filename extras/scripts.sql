
CREATE TABLE MSG_SPEC ( 
	MSG_SPEC_ID          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	MSG_SPEC_NAME        VARCHAR( 100 ) NOT NULL,
	CONSTRAINT PK_MSG_SPEC PRIMARY KEY ( MSG_SPEC_ID ),
	CONSTRAINT IDX_MSG_SPEC UNIQUE ( MSG_SPEC_NAME )
 );

CREATE TABLE ENCODING ( 
	ENCODING_TYPE        CHAR( 10 ) NOT NULL,
	CONSTRAINT PK_ENCODING PRIMARY KEY ( ENCODING_TYPE )
 );

CREATE TABLE FLD_TYPE ( 
	FLD_TYPE_NAME        CHAR( 20 ),
	FLD_PROCESSOR_CLASS  VARCHAR( 500 ) NOT NULL,
	CONSTRAINT PK_FLD_TYPE UNIQUE ( FLD_TYPE_NAME )
 );

CREATE TABLE MSG ( 
	MSG_ID               INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	MSG_NAME             VARCHAR( 100 ) NOT NULL,
	RQ_FRAG_ID           INTEGER NOT NULL,
	RP_FRAG_ID           INTEGER NOT NULL,
	MSG_MSG_SPEC_ID      INTEGER NOT NULL,
	MSG_MTI_VAL          VARCHAR(100) NOT NULL,
	CONSTRAINT PK_MESSAGE PRIMARY KEY ( MSG_ID )
 );

CREATE INDEX IDX_MSG ON MSG ( RQ_FRAG_ID );

CREATE INDEX IDX_MSG_0 ON MSG ( RP_FRAG_ID );

CREATE INDEX IDX_MSG_1 ON MSG ( MSG_MSG_SPEC_ID );

CREATE TABLE MSG_FRAG ( 
	MSG_FRAG_ID          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	MSG_FRAG_NAME        VARCHAR( 100 ) NOT NULL,
	MSG_FRAG_FLD_ORDER   INTEGER,
	MSG_FRAG_FLD_ID      INTEGER NOT NULL,
	CONSTRAINT PK_MSG_FRAG PRIMARY KEY ( MSG_FRAG_ID,MSG_FRAG_NAME,MSG_FRAG_FLD_ID),
	CONSTRAINT IDX_MSG_FRAG_0 UNIQUE ( MSG_FRAG_ID, MSG_FRAG_FLD_ORDER )
 );
CREATE INDEX IDX_MSG_FRAG ON MSG_FRAG ( MSG_FRAG_FLD_ID );

CREATE TABLE MLI(
 MLI_NAME CHAR(10) NOT NULL,
 MLI_CLASS VARCHAR(200) NOT NULL,
 CONSTRAINT PK_MLI PRIMARY KEY (MLI_NAME),
);
CREATE INDEX IDX_MLI ON MLI ( MLI_NAME );

CREATE TABLE LST_CONFIG(
   LST_CONF_NAME CHAR(50) NOT NULL,
   LST_CONF_PORT INTEGER NOT NULL,
   LST_CONF_IP VARCHAR(100) NOT NULL,
   LST_CONF_SCRIPT VARCHAR(200) NOT NULL,
   LST_CONF_MLI CHAR(10) NOT NULL,
   CONSTRAINT PK_LST_CONFIG PRIMARY KEY (LST_CONF_NAME),
   CONSTRAINT FK_LST_CONFIG_MLI FOREIGN KEY ( LST_CONF_MLI ) REFERENCES MLI( MLI_NAME ) ON DELETE NO ACTION ON UPDATE NO ACTION
);   
CREATE INDEX IDX_LST_CONFIG ON LST_CONFIG ( LST_CONF_NAME );   

CREATE TABLE CON_CONFIG(
   CON_CONF_NAME CHAR(50) NOT NULL,
   CON_CONF_PORT INTEGER NOT NULL,
   CON_CONF_IP VARCHAR(100) NOT NULL,
   CON_CONF_SCRIPT VARCHAR(200) NOT NULL,
   CON_CONF_MLI CHAR(10) NOT NULL,
   CONSTRAINT PK_CON_CONFIG PRIMARY KEY (CON_CONF_NAME),
   CONSTRAINT FK_CON_CONFIG_MLI FOREIGN KEY ( CON_CONF_MLI ) REFERENCES MLI( MLI_NAME ) ON DELETE NO ACTION ON UPDATE NO ACTION
);   
CREATE INDEX IDX_CON_CONFIG ON CON_CONFIG ( CON_CONF_NAME );   


CREATE TABLE FLD ( 
	FLD_ID               INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	MSG_SPEC_ID          INTEGER NOT NULL,
	FLD_NAME             VARCHAR( 100 ) NOT NULL,
	FLD_TYPE             CHAR( 20 ) NOT NULL,
	FLD_SIZE             INTEGER ,
	FLD_ENCODING         CHAR( 10 ) NOT NULL,
	FLD_LEN_IND_SIZE     INTEGER NULL,
	FLD_LEN_IND_ENCODING CHAR( 10 ) NULL,
	TERMINATOR_CHAR      CHAR(2) NULL,
	FLD_SEQ              INTEGER DEFAULT -1 NOT NULL,
	FLD_PARENT_ID        INTEGER,
	IS_MTI               CHAR(1) NOT NULL,
	IS_FLIGHT_KEY        CHAR(1) NOT NULL,
	CONSTRAINT PK_FLD PRIMARY KEY ( FLD_ID )
 );

CREATE INDEX IDX_FLD ON FLD ( FLD_ENCODING );

CREATE INDEX IDX_FLD_0 ON FLD ( FLD_TYPE );

CREATE INDEX IDX_FLD_1 ON FLD ( FLD_LEN_IND_ENCODING );

CREATE INDEX IDX_FLD_2 ON FLD ( FLD_PARENT_ID );

CREATE INDEX IDX_FLD_3 ON FLD ( MSG_SPEC_ID );

ALTER TABLE MSG ADD CONSTRAINT FK_MSG_MSG_RQ_FRAG FOREIGN KEY ( RQ_FRAG_ID ) REFERENCES MSG_FRAG( MSG_FRAG_ID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE MSG ADD CONSTRAINT FK_MSG_MSG_RP_FRAG FOREIGN KEY ( RP_FRAG_ID ) REFERENCES MSG_FRAG( MSG_FRAG_ID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE MSG ADD CONSTRAINT FK_MSG_MSG_SPEC FOREIGN KEY ( MSG_MSG_SPEC_ID ) REFERENCES MSG_SPEC( MSG_SPEC_ID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE MSG_FRAG ADD CONSTRAINT FK_MSG_FRAG_FLD FOREIGN KEY ( MSG_FRAG_FLD_ID ) REFERENCES FLD( FLD_ID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE FLD ADD CONSTRAINT FK_FLD_ENCODING FOREIGN KEY ( FLD_ENCODING ) REFERENCES ENCODING( ENCODING_TYPE ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE FLD ADD CONSTRAINT FK_FLD_FLD_TYPE FOREIGN KEY ( FLD_TYPE ) REFERENCES FLD_TYPE( FLD_TYPE_NAME ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE FLD ADD CONSTRAINT FK_FLD_LEN_ENCODING FOREIGN KEY ( FLD_LEN_IND_ENCODING ) REFERENCES ENCODING( ENCODING_TYPE ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE FLD ADD CONSTRAINT FK_FLD_FLD FOREIGN KEY ( FLD_PARENT_ID ) REFERENCES FLD( FLD_ID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE FLD ADD CONSTRAINT FK_FLD_MSG_SPEC FOREIGN KEY ( MSG_SPEC_ID ) REFERENCES MSG_SPEC( MSG_SPEC_ID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

--DATA

insert into fld_type values('FIXED','com.daalitoy.apps.keedoh.data.fields.processor.FixedFieldProcessor');
insert into fld_type values('VARIABLE','com.daalitoy.apps.keedoh.data.fields.processor.VariableFieldProcessor');
insert into fld_type values('TERMINATED','com.daalitoy.apps.keedoh.data.fields.processor.TerminatedFieldProcessor');
insert into fld_type values('BITMAPPED','com.daalitoy.apps.keedoh.data.fields.processor.BitmappedFieldProcessor');

insert into ENCODING values('ASCII')
insert into ENCODING values('EBCDIC')
insert into ENCODING values('BINARY')
insert into ENCODING values('BCD')

insert into MLI values ('2I','com.daalitoy.apps.keedoh.data.model.impl.ShortMliInclusive')
insert into MLI values ('2E','com.daalitoy.apps.keedoh.data.model.impl.ShortMliExclusive')

select * from fld
select * from msg
select * from msg_frag
select * from ml
delete from LST_CONFIG

delete from msg